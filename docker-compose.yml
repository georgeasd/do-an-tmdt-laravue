version: "3"

networks:
    app-network:
      driver: bridge
services:
# The Application setup php
  php:
    build: 
      context: .
      dockerfile: docker/php/Dockerfile
    restart: unless-stopped
    working_dir: /var/www/html
    volumes: 
      - ./:/var/www/html
      - .env:/var/www/html/.env
    ports: 
      - "${PHP_PORT_OUT}:9000"
    depends_on:
      - mysql
      - redis
    networks:
      - app-network
# The redis
  redis:
    image: redis:alpine
# The Web Server
  nginx:
    build:
      context: .
      dockerfile: docker/nginx/Dockerfile
    env_file:
      - ./.env
    restart: unless-stopped
    ports: 
      - "${NGINX_PORT_OUT}:80"
    working_dir: /var/www/html
    volumes: 
      - ./:/var/www/html
      - ./docker/nginx/vhost.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - php
      - mysql
    networks:
      - app-network
 # MySQL Service
  mysql:
    image: mysql:5.7.28
    restart: unless-stopped
    tty: 'True'
    ports: 
      - "${MYSQL_PORT_OUT}:3306"
    volumes:
      - ./docker/mysql:/var/lib/mysql
    environment: 
      MYSQL_DATABASE: homestead
      MYSQL_USER: homestead
      MYSQL_PASSWORD: secret
      MYSQL_ROOT_PASSWORD: secret
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    networks:
      - app-network
  adminer:
    image: adminer:4.7.5-standalone
    restart: unless-stopped
    ports:
      - "${ADMINER_PORT_OUT}:8080"
    environment:
      ADMINER_DEFAULT_SERVER: mysql
    depends_on:
      - mysql
    networks:
      - app-network